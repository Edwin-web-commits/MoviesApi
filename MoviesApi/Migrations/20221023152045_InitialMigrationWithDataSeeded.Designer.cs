// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesApi.Data;

#nullable disable

namespace MoviesApi.Migrations
{
    [DbContext(typeof(MoviesApiDbContext))]
    [Migration("20221023152045_InitialMigrationWithDataSeeded")]
    partial class InitialMigrationWithDataSeeded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MoviesApi.Data.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Story Telling"
                        });
                });

            modelBuilder.Entity("MoviesApi.Data.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cinemas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Jan Smuts,Braamfontein, Johannesburg",
                            City = "Johannesburg",
                            Name = "Apololo City"
                        },
                        new
                        {
                            Id = 2,
                            Address = "19 Mandela Street,BedfordView, Johannesburg",
                            City = "Johannesburg",
                            Name = "Night Time"
                        });
                });

            modelBuilder.Entity("MoviesApi.Data.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Playdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CinemaId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CinemaId = 2,
                            Description = "Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency.",
                            ImageUrl = "https://pisces.bbystatic.com/image2/BestBuy_US/images/products/5794/5794111_so.jpg",
                            Name = "ShawShank Redemption",
                            Playdate = new DateTime(2022, 10, 23, 17, 20, 45, 734, DateTimeKind.Local).AddTicks(9204),
                            ReleaseDate = new DateTime(2022, 10, 23, 17, 20, 45, 734, DateTimeKind.Local).AddTicks(9194)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CinemaId = 1,
                            Description = "A high school chemistry teacher diagnosed with inoperable lung cancer turns to manufacturing and selling methamphetamine in order to secure his family's future.",
                            ImageUrl = "https://televisionpromos.com/wp-content/uploads/2013/07/Breaking-Bad-AMC-TV-series-Artwork.jpg",
                            Name = "Breaking Bad",
                            Playdate = new DateTime(2022, 10, 23, 17, 20, 45, 734, DateTimeKind.Local).AddTicks(9206),
                            ReleaseDate = new DateTime(2022, 10, 23, 17, 20, 45, 734, DateTimeKind.Local).AddTicks(9206)
                        });
                });

            modelBuilder.Entity("MoviesApi.Data.Movie", b =>
                {
                    b.HasOne("MoviesApi.Data.Category", "Category")
                        .WithMany("Movies")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesApi.Data.Cinema", "Cinema")
                        .WithMany("Movies")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("MoviesApi.Data.Category", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("MoviesApi.Data.Cinema", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
